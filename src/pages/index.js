import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { useEffect, useState } from 'react'
import { addDoc, collection, deleteDoc, doc, getDocs, updateDoc } from 'firebase/firestore';
import { db } from '../../firebase.init';



export default function Home() {
  const databaseRef = collection(db,'projectDetails')

  const [name,setName] = useState('');
  const [desc,setDesc] = useState('');
  const [url,setUrl] = useState('');
  const [data,setData] = useState([]);
  
  const [ID, setID] = useState(null);
  const [isUpdate, setIsUpdate] = useState(false);

  //Data add function
  const addDataToDatabase = () =>{
    addDoc(databaseRef,{
      name,
      desc,
      url
    })
    .then(() => {
      alert('data added')
      getData()
    })
    .catch((err) =>{
      
    }) 
  }

  useEffect(() =>{
    getData()
  },[])


  //Data retrive function

  const getData = async() => {
    await getDocs(databaseRef)
    .then((response) =>{
      setData(response.docs.map((data)=>{
        return {...data.data(), id: data.id}
      }))
    })
  }


  //Data update function
  const getID = (id, name, desc) => {
    setID(id)
    setName(name)
    setDesc(desc)
   
  }
  const updateFields = () => {
    let fieldToEdit = doc(db, 'projectDetails', ID);
    updateDoc(fieldToEdit, {
      name: name,
      desc : desc,
      
    })
    .then(() => {
      alert('Data Updated')
    })
    .catch((err) => {
      console.log(err);
    })
  }


  // Delete single data 
  const deleteData = (id) => {
    let fieldToEdit = doc(db, 'projectDetails', id);
    deleteDoc(fieldToEdit)
    .then(() => {
      alert('Data Deleted')
      getData()
    })
    .catch((err) => {
      alert('Cannot Delete that field..')
    })
  }
  

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>

      <input value={name}  onChange={event => setName(event.target.value)}  placeholder='name' type="text" /><br />
      <input value={desc}  onChange={event => setDesc(event.target.value)}   placeholder='description' type="text"  /><br />
      <input value={ID}      type="text"  /><br />
      <button onClick={addDataToDatabase} >
        ADD
      </button>
      <button onClick={updateFields} >
        Update
      </button>

      {data.map((d) =>{
            return (
              <div style={{border:'1px solid black'}}>
                <h1> Name : {d.name}</h1>
                <h1> Description : {d.desc}</h1>
                <button onClick={() => getID(d.id, d.name, d.desc )}>Update</button>
                <button onClick={() => deleteData(d.id)} >Delete</button>
              </div>
            )
      })}


      </main>
    </>
  )
}
